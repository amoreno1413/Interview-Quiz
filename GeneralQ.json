{
  "What is a Data Structure?": [
    "A data structure is a storage format that defines the way data is stored, organized, and manipulated.",
    "A data structure is a way to sort books on a shelf.",
    "A data structure is a specific type of programming language."
  ],
  "What is an Array?": [
      "An array is commonly referred to as a collection of items stored at contiguous memory locations.",
      "An array is a kind of spreadsheet used for organizing data.",
      "An array is a special type of computer hardware used for data storage."
  ],
  "What is a Linked List?": [
      "A linked list is a type of data structure that has a sequence of nodes, each node points to the next node.",
      "A linked list is a type of hyperlink used to navigate the internet.",
      "A linked list is a type of tree-based data structure."
  ],
  "What is LIFO?": [
      "LIFO stands for Last In First Out.",
      "LIFO stands for Last Inactive First Offline",
      "LIFO stands for Least Invoked First Obliterated."
  ],
  "What is a Stack?": [
      "A stack refers to a linear data structure performing operations in a LIFO order.",
      "A stack is a collection of items placed one on top of another.",
      "A stack refers to a linear data structure performing operations in a FIFO order."
  ],
  "What is FIFO?": [
      "FIFO stands for First In First Out.",
      "FIFO stands for Fast Input Fast Output.",
      "FIFO stands for Fast Insertions Fast Operations"
  ],
  "What is a Queue": [
      "A queue refers to a linear data structure performing operations in a FIFO order.",
      "A queue is a line of operations waiting to be executed.",
      "A queue refers to a linear data structure performing operations in a LIFO order."
  ],
  "What are Binary Trees?": [
      "A binary tree is a non-linear tree data structure where each parent node can have a maximum of 2 child nodes.",
      "A binary tree is a non-linear tree data structure where each parent node can have a maximum of 3 child nodes.",
      "A binary tree is a non-linear tree data structure where each parent node can have a maximum of 1 child nodes."
  ],
  "What is Recursion?": [
      "Recursion refers to a function calling itself based on a terminating condition.",
      "Recursion is a term used in mathematics for solving complex problems step by step.",
      "Recursion refers to a function calling other functions."
  ],
  "What is the OOPs concept?": [
      "The OOPs concept is a paradigm that provides concepts such as objects, classes, and inheritance.",
      "The OOPs concept is a paradigm that is structured around procedures or functions.",
      "The OOPs concept is a paradigm that treats computation as the evaluation of mathematical functions and avoids changing state and mutable data. "
  ],
   "What are the concepts introduced in OOPS?" : [
       "Objects, Class, Inheritance, Polymorphism, Abstraction, Encapsulation.",
       "Methods, Properties, Functions, Variables, Classes.",
       "Arrays, Loops, Pointers, Operators, Functions."
   ],
   "What is a Binary Search Tree?" : [
       "Left sub-tree contains nodes with values LESS than the parent node and the Right sub tree contains nodes with values GREATER than the parent node.",
       "Left sub-tree contains nodes with values GREATER than the parent node and the Right sub tree contains nodes with values LESS than the parent node.",
       "A tree structure where the left and right subtrees contain nodes with values EQUAL to the parent node."
   ],
   "What are Doubly Linked Lists?" : [
       "A type of linked list in which traversal across the elements can be done in both directions",
       "A type of linked list that contains a pointer to the head and tail",
       "A type of linked list in which traversal across the elements can only be done in one direction"
   ],
   "What is a Graph?" : [
       "A type of data structure that contains a set of ordered pairs, which are edges that connect nodes",
       "A type of data structure that contains a collection of nodes with no connections between them",
       "A type of data structure that contains x and y coordinates"
   ],
   "What is the difference between linear and non-linear data structures?" : [
       "Data elements are adjacent to each other in linear data structures and are arranged in hierarchical manner in non-linear structures.",
       "Data elements are adjacent to each other in non-linear data structures and are arranged in hierarchical manner in linear structures.",
       "The differences are purely based on what programming language you are using"
   ],
   "What is Deque?" : [
       "Double-ended queue",
       "An acronym for 'Data Queue'",
       "A double-ended stack"
   ],
   "What is the difference between Stack and Array?" : [
       "Data access in a stack follows a particular sequence, arrays do not follow a specific order",
       "Arrays follow a LIFO order, while stacks follow a FIFO",
       "Arrays have a fixed size, while stacks can dynamically expand"
   ],
   "What sorting algorithm has the quickest runtime?" : [
      "Quicksort",
       "Bogosort",
       "Bubblesort"
   ],
   "How does variable declaration affect memory?" : [
       "The amount of memory allocated  depends on the data type being stored in the variable",
       "Variable declaration has no impact on memory",
       "Memory allocation is fixed for all variables"
   ],
   "What are dynamic data structures?" : [
       "Data structures that can expand and contract as a program runs",
       "Data structures that are only used in dynamic programming",
       "Data structures that are predefined and cannot be changed during runtime"
   ],

  "What is the difference between an array and a linked list?": [
  "An array is a static data structure with a fixed size, while a linked list is a dynamic data structure.",
  "An array can only store integers, while a linked list can store various data types.",
  "There is no difference between arrays and linked lists."
  ],

  "What is a stack data structure used for?": [
  "A stack is used for managing function calls and keeping track of execution context.",
  "A stack is used for sorting data in ascending order.",
  "A stack is used for storing data randomly."
  ],

  "What are the basic operations on a queue data structure?": [
  "The basic operations on a queue are enqueue and dequeue.",
  "The basic operations on a queue are sort and search.",
  "The basic operations on a queue are push and pop."
  ],

  "What is the purpose of a binary tree data structure?": [
  "A binary tree is used for efficient searching, insertion, and deletion of data.",
  "A binary tree is used for displaying data graphically.",
  "A binary tree is used for encrypting data."
  ],

  "What is a hash table data structure?": [
  "A hash table is a data structure that maps keys to values for efficient retrieval.",
  "A hash table data structure is a table used for storing information about different types of hashes.",
  "A hash table data structure is a chart that displays the hash values of various data elements."
  ],

  "How does a linked list differ from an array in terms of memory allocation?": [
  "A linked list dynamically allocates memory for each element, while an array pre-allocates a block of memory.",
  "A linked list allocates the same amount of memory as an array.",
  "An array dynamically allocates memory for each element, while a linked list pre-allocates a block of memory."
  ],

  "What is a graph data structure used for?": [
  "A graph is used for modeling relationships between various entities.",
  "A graph is used for linear data storage.",
  "A graph is used for non-linear data."
  ],

  "What is a doubly-linked list?": [
  "A doubly-linked list is a type of linked list where each node has pointers to both the next and previous nodes.",
  "A doubly-linked list is a list that contains only even numbers.",
  "A doubly-linked list is a list that is linked twice to the same set of data, making it incredibly efficient."
  ],

  "What is the purpose of a heap data structure?": [
  "A heap is used for priority queue operations like insertion, maximum extraction, and sorting.",
  "The purpose of a heap data structure is to provide a place for collecting garbage and waste materials in computer memory.",
  "A heap is used for searching data."
  ],

  "What is the primary advantage of a hash table data structure?": [
  "The primary advantage of a hash table is its fast data retrieval time on average.",
  "The primary advantage of a hash table is its low memory usage.",
  "The primary advantage of a hash table is its efficient sorting capabilities."
  ],

  "What is the difference between a stack and a queue data structure?": [
  "A stack follows the Last In, First Out (LIFO) principle, while a queue follows the First In, First Out (FIFO) principle.",
  "A stack and a queue are the same; they both follow the LIFO principle.",
  "A stack and a queue are the same; they both follow the FIFO principle."
  ],
    "What is runtime analysis in computer science?": [
  "Runtime analysis is the process of determining how the running time of an algorithm or program grows as a function of its input size.",
  "Runtime analysis is the actual time it takes for a computer program to execute.",
  "Runtime analysis is used to measure the memory usage of a program."
  ],

  "What is Big O notation used for in runtime analysis?": [
  "Big O notation is used to describe the upper bound of an algorithm's running time in the worst-case scenario.",
  "Big O notation is used for measuring the lower bound of running time.",
  "Big O notation is used for sorting algorithms only."
  ],

  "What is the time complexity of an algorithm?": [
  "Time complexity is a measure of the amount of time an algorithm takes in terms of the input size.",
  "Time complexity is a measure of the number of instructions in an algorithm.",
  "Time complexity is a measure of the memory usage of an algorithm."
  ],

  "What does it mean when we say an algorithm has a linear time complexity (O(n))?": [
  "It means the running time of the algorithm grows linearly with the size of the input data.",
  "It means the algorithm takes constant time to run.",
  "It means the algorithm takes logarithmic time to run."
  ],

  "What is the time complexity of an algorithm with constant time (O(1))?": [
  "An algorithm with O(1) time complexity means it takes a constant amount of time to run, regardless of the input size.",
  "An algorithm with O(1) time complexity means it takes a linear amount of time to run.",
  "An algorithm with O(1) time complexity means it takes exponential time to run."
  ],

  "What is the difference between best-case and worst-case time complexity?": [
  "Best-case time complexity is the minimum running time an algorithm can achieve, while worst-case time complexity is the maximum running time.",
  "Best-case time complexity is the time it takes in practice, while worst-case time complexity is theoretical.",
  "Best-case and worst-case time complexity are always the same."
  ],

  "What is the space complexity of an algorithm?": [
  "Space complexity is a measure of the amount of memory an algorithm uses in terms of the input size.",
  "Space complexity is the same as time complexity.",
  "Space complexity is a measure of the number of variables in an algorithm."
  ],

  "What does it mean when we say an algorithm has quadratic time complexity (O(n^2))?": [
  "It means the running time of the algorithm grows quadratically with the size of the input data.",
  "It means the algorithm takes constant time to run.",
  "It means the algorithm takes logarithmic time to run."
  ],

  "How can you compare two algorithms based on their time complexity?": [
  "You can compare algorithms by looking at their Big O notation and choosing the one with the lower order of growth for the given problem.",
  "You can compare algorithms by measuring their actual runtime on different computers.",
  "You can compare algorithms by looking at the number of lines of code they have."
  ],

  "What is an algorithm's time complexity if it has an exponential growth rate (O(2^n))?": [
  "An algorithm with O(2^n) time complexity has exponential growth, meaning its running time doubles with each increase in input size.",
  "An algorithm with O(2^n) time complexity takes constant time to run.",
  "An algorithm with O(2^n) time complexity takes logarithmic time to run."
  ],

  "What is the time complexity of a linear search algorithm?": [
  "The time complexity of a linear search is O(n), where 'n' is the size of the input data.",
  "The time complexity of a linear search is O(log n), where 'log n' is the size of the input data.",
  "The time complexity of a linear search is O(1), regardless of input size."
  ],

  "What is the difference between average-case and worst-case time complexity?": [
  "Average-case time complexity considers the expected running time over all possible inputs, while worst-case time complexity considers the maximum running time over all inputs.",
  "Average-case time complexity is always the same as worst-case time complexity.",
  "Average-case time complexity considers the minimum running time over all inputs."
  ],

  "What is the time complexity of a binary search algorithm?": [
  "The time complexity of a binary search is O(log n), where 'n' is the size of the input data.",
  "The time complexity of a binary search is O(n), regardless of input size.",
  "The time complexity of a binary search is O(1), regardless of input size."
  ],

  "What does it mean when we say an algorithm has logarithmic time complexity (O(log n))?": [
  "It means the running time of the algorithm increases slowly as the size of the input data grows.",
  "It means the algorithm takes constant time to run.",
  "It means the algorithm takes exponential time to run."
  ],

  "What is the time complexity of a linearithmic algorithm (O(n log n))?": [
  "A linearithmic algorithm has a time complexity of O(n log n), which is faster than quadratic but slower than linear time complexity.",
  "A linearithmic algorithm has a time complexity of O(n^2), which is slower than linear but faster than quadratic time complexity.",
  "A linearithmic algorithm has a time complexity of O(1), which is the fastest possible."
  ],
  "What is space complexity in computer science?": [
        "Space complexity in computer science refers to the amount of memory or storage space an algorithm or program requires to solve a problem.",
        "Space complexity is a measure of how efficiently an algorithm uses memory resources to process data.",
        "Space complexity deals with memory consumption during program execution."
  ],

  "Why is space complexity important when analyzing algorithms?": [
      "Space complexity is crucial for understanding how efficiently an algorithm utilizes memory resources.",
      "It helps assess the impact of an algorithm on memory usage, which is essential for optimizing resource allocation.",
      "Space complexity analysis is important for designing memory-efficient programs."
  ],

  "What is the difference between space complexity and time complexity?": [
      "Space complexity focuses on memory usage, while time complexity focuses on execution time.",
      "Space complexity is about the memory resources required, and time complexity is about the computational time needed.",
      "Space complexity and time complexity are distinct measures of algorithm efficiency."
  ],

  "How is space complexity typically expressed in Big O notation?": [
      "Space complexity is often expressed using Big O notation, such as O(1), O(n), or O(n^2), where 'n' represents the problem size.",
      "The Big O notation is commonly used to describe the upper bound on memory usage in relation to the input size.",
      "Space complexity analysis provides an upper bound on memory growth using Big O notation."
  ],

  "What is auxiliary space complexity in the context of algorithms?": [
      "Auxiliary space complexity refers to the additional memory space used by an algorithm beyond the input data.",
      "It includes any memory required for variables, data structures, and recursive function calls.",
      "Auxiliary space complexity measures the extra memory usage introduced by an algorithm."
  ],

  "Can an algorithm have different space complexities for best, average, and worst cases?": [
      "Yes, an algorithm can exhibit different space complexities for its best, average, and worst-case scenarios.",
      "The space complexity may vary based on the input data and algorithm behavior in different situations.",
      "It is important to consider space usage across various cases when analyzing an algorithm."
  ],

  "What is in-place space complexity, and when is it preferred?": [
      "In-place space complexity refers to algorithms that use a constant amount of additional memory space, usually O(1).",
      "In-place algorithms are preferred when memory resources are limited or need to be conserved.",
      "In-place space complexity is often associated with efficient memory usage."
  ],

  "How do data structures affect the space complexity of algorithms?": [
      "The choice of data structures can significantly impact an algorithm's space complexity.",
      "Efficient data structures can reduce memory usage, while inefficient ones can increase it.",
      "Selecting appropriate data structures is crucial for managing space complexity."
  ],

  "What is the primary goal of optimizing space complexity in algorithm design?": [
      "The primary goal of optimizing space complexity is to minimize memory consumption while maintaining algorithm correctness and efficiency.",
      "Efficient space utilization can lead to faster and more resource-efficient programs.",
      "Optimizing space complexity contributes to better overall system performance."
  ],

  "What are some common techniques for reducing space complexity in algorithms?": [
      "Common techniques include reusing memory, eliminating redundant data, and employing efficient data structures.",
      "Dynamic programming and memoization are often used to optimize space complexity.",
      "Minimizing space complexity may involve trade-offs with time complexity."
  ],
    "What is the purpose of a binary search algorithm?": [
    "Binary search is used to efficiently locate a specific item in a sorted list.",
    "Binary search is used for sorting data in descending order.",
    "Binary search is a simple linear search algorithm."
  ],
    "What is the role of an operating system in a computer system?": [
    "An operating system manages hardware and provides services for computer programs.",
    "Operating systems are only used for gaming on computers.",
    "Operating systems are responsible for physical maintenance of computer components."
  ],
  "Explain the difference between a compiler and an interpreter.": [
    "A compiler translates the entire program into machine code before execution, while an interpreter translates and executes code line by line.",
    "Compilers and interpreters perform the same tasks in programming.",
    "Compilers are used for web development, while interpreters are used for desktop applications."
  ],
  "What is the purpose of version control in software development?": [
    "Version control helps track and manage changes to source code, enabling collaboration and maintaining project history.",
    "Version control is a way to track software versions for marketing purposes.",
    "Version control is only used for debugging software."
  ],
  "Explain the concept of concurrency in software development.": [
    "Concurrency is the ability of a system to perform multiple tasks in overlapping time periods.",
    "Concurrency is a technique used for sequential execution of tasks.",
    "Concurrency is only relevant in database management."
  ],
    "Explain the concept of polymorphism in object-oriented programming.": [
    "Polymorphism allows objects of different classes to be treated as objects of a common base class, simplifying code design and reuse.",
    "Polymorphism is a concept used only in low-level programming languages.",
    "Polymorphism is a technique used to increase code complexity."
  ],
  "Explain the difference between synchronous and asynchronous programming.": [
    "Synchronous programming executes tasks one after the other, blocking until each task is completed, while asynchronous programming allows multiple tasks to run concurrently.",
    "Synchronous and asynchronous programming are the same concepts with different names.",
    "Asynchronous programming is a technique used only for user interfaces."
  ],
    "What is the purpose of a try-catch block in programming?": [
    "A try-catch block is used for error handling, allowing the program to gracefully handle exceptions and prevent crashes.",
    "Try-catch blocks are used to execute code repeatedly.",
    "Try-catch blocks are used exclusively in game development."
  ],
  "What is the fundamental difference between a thread and a process in a computer system?": [
    "A process is an independent program with its memory space, while threads share the same memory space within a process.",
    "Threads and processes are interchangeable terms for the same concept in computer science.",
    "Threads are used for user-level tasks, and processes are used for system-level tasks."
  ],
  "Explain the concept of multithreading in software development.": [
    "Multithreading is a technique that allows a program to run multiple threads concurrently, enabling improved performance and responsiveness.",
    "Multithreading is used to create standalone applications with no interactivity.",
    "Multithreading is only used in gaming software."
  ],
  "What is a race condition in the context of multithreading?": [
    "A race condition occurs when two or more threads access shared data simultaneously, leading to unexpected and undesirable results.",
    "Race conditions are designed to optimize thread performance.",
    "Race conditions only happen in single-threaded applications."
  ],
  "Explain the purpose of a mutex in multithreaded programming.": [
    "A mutex (short for mutual exclusion) is used to protect shared resources and prevent multiple threads from accessing them simultaneously.",
    "Mutexes are used to increase thread concurrency in a program.",
    "Mutexes are only used for debugging thread-related issues."
  ],
  "What is a thread pool, and why is it used in multithreaded applications?": [
    "A thread pool is a group of reusable threads that are managed and maintained for task execution, improving efficiency and performance.",
    "Thread pools are only used for multithreaded database queries.",
    "Thread pools are designed to create excessive threads for a single task."
  ],
  "What is a daemon thread in the context of multithreading?": [
    "A daemon thread is a thread that runs in the background and is terminated when all non-daemon threads have completed their execution.",
    "Daemon threads are used for user interface interactions.",
    "Daemon threads are critical for system stability."
  ],
  "What is the main advantage of using threads in software development?": [
    "Threads can improve application responsiveness by allowing concurrent execution of tasks and utilizing multiple processor cores.",
    "Threads are used to reduce the complexity of software applications.",
    "Threads are exclusively used for encryption purposes."
  ],
  "Explain the concept of process isolation in the context of operating systems.": [
    "Process isolation is a security feature that ensures processes are separated and cannot interfere with each other's memory or resources.",
    "Process isolation is a way to improve inter-process communication.",
    "Process isolation is used to maximize system resource sharing."
  ],
  "What is the primary role of a scheduler in a multitasking operating system?": [
    "A scheduler determines which process or thread gets to use the CPU, ensuring fair and efficient resource allocation.",
    "Schedulers are designed to slow down the execution of processes and threads.",
    "Schedulers are used exclusively for error handling."
  ],
  "Why might you choose to use processes instead of threads in a software application?": [
    "Processes offer better isolation, stability, and security, which can be crucial for certain applications.",
    "Processes are used for tasks that require high concurrency.",
    "Processes are only used for small, single-threaded applications."
  ]
}
